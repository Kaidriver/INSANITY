<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_width = (CELL_WIDTH/16) * 1600;
room_height = (CELL_HEIGHT/16) * 900;

var width = room_width div CELL_WIDTH; 
var height = room_height div CELL_HEIGHT;

grid = ds_grid_create(width, height);

ds_grid_set_region(grid, 0, 0, width-1, height-1, VOID); 

randomize(); 

//c is controller
var cx = width div 2; 
var cy = height div 2; 
instance_create(cx*CELL_WIDTH+16, cy*CELL_HEIGHT+16, obj_timer);
instance_create(cx*CELL_WIDTH+16, cy*CELL_HEIGHT+16, obj_player);
if (global.twoplayer = true) {
    instance_create(cx*CELL_WIDTH+16, cy*CELL_HEIGHT+16, obj_p2);
    global.objects = true;
}   
if (global.objects = true) {
    instance_create(x,y, obj_scorep1d); 
    instance_create(x,y, obj_scorep2d); 
}
var ods = irandom(3); 
if (ods = 0) {
    instance_create(96, 96, obj_finish);
}
else if (ods = 1) {
    instance_create(96, 1536, obj_finish);
}
else if (ods = 2) {
    instance_create(2880, 96, obj_finish);
}
else if (ods = 3) {
    instance_create(2880, 1536, obj_finish);
}
var cdir = irandom(3); 

var odds = 3;

repeat (10000) {
    
    grid[# cx, cy] = FLOOR;
    
    if (irandom(odds) = odds) {
        cdir = irandom(3);
    }
    
    var xdir = lengthdir_x(1 , cdir*90);
    var ydir = lengthdir_y(1, cdir*90); 
    cx += xdir;
    cy += ydir;
    
    cx = clamp(cx, 1, width-2);
    cy = clamp(cy, 1, height-2);
    
    
}

for (var yy = 1; yy &lt; height - 1; yy++) {
    for (var xx = 1; xx &lt; width - 1; xx++) {
        if (grid[# xx, yy] = FLOOR) {
        
            if (grid[# xx+1, yy] != FLOOR) {
                grid[# xx+1, yy] = WALL; 
            }
            
            if (grid[# xx-1, yy] != FLOOR) {
                grid[# xx-1, yy] = WALL;
            }
            
            if (grid[# xx, yy+1] != FLOOR) {
                grid[# xx, yy+1] = WALL; 
            }
            
            if (grid[# xx, yy-1] != FLOOR) {
                grid[# xx, yy-1] = WALL; 
            }
        
        }
    }
}

for (var yy = 0; yy &lt; height; yy++) {
    for (var xx = 0; xx &lt; width; xx++) {
        if (grid[# xx, yy] == FLOOR) {
           
            instance_create(xx*CELL_WIDTH, yy*CELL_HEIGHT,obj_floor); 
            var odd = 5;
            var rx = xx*CELL_WIDTH+CELL_WIDTH/2;
            var ry = yy*CELL_HEIGHT+CELL_HEIGHT/2;
            if (point_distance(rx,ry,obj_player.x, obj_player.y) &gt; 160 &amp;&amp; point_distance(rx,ry,obj_finish.x, obj_finish.y) &gt; 160 &amp;&amp; irandom(odd) == odd) {
                instance_create(rx, ry, obj_roadblock); 
            }
            
            
        } else if (grid[# xx, yy] == WALL) {
        
            instance_create(xx*CELL_WIDTH, yy*CELL_HEIGHT,obj_wall); 
        
        } else if (grid[# xx, yy] == VOID) {
            instance_create(xx*CELL_WIDTH, yy*CELL_HEIGHT,obj_tile); 
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
